// This file has been autogenerated from a class added in the UI designer.

using System;
using AppKit;
using FractalViewMac.Model.Common.Classes;
using FractalViewMac.Model.Common.Enums;

namespace FractalView
{
    public partial class ColorSettingsViewController : NSViewController
    {
        ColorSettings clrSettings = MainClass.mainViewController.clrSettings;
        MainViewController mainViewController = MainClass.mainViewController;

        public ColorSettingsViewController(IntPtr handle) : base(handle)
        {

        }

        void ColorMainImageSlider_Activated(object sender, EventArgs e)
        {
            clrSettings.R = (byte)ColorRMainImageSlider.IntValue;
            clrSettings.G = (byte)ColorGMainImageSlider.IntValue;
            clrSettings.B = (byte)ColorBMainImageSlider.IntValue;

            mainViewController.ReDraw();
        }


        public override void ViewDidLoad()
        {
            base.ViewDidLoad();

            if (clrSettings.Algorithm == ColorAlgorithms.EscapeTimeAlgorithm)
            {
                ColorAlgoComboBox.SelectItem(0);
            }
            else
            {
                ColorAlgoComboBox.SelectItem(1);
            }

            ColorRMainImageSlider.IntValue = clrSettings.R;
            ColorGMainImageSlider.IntValue = clrSettings.G;
            ColorBMainImageSlider.IntValue = clrSettings.B;

            ColorRMainImageSlider.Activated += ColorMainImageSlider_Activated;
            ColorGMainImageSlider.Activated += ColorMainImageSlider_Activated;
            ColorBMainImageSlider.Activated += ColorMainImageSlider_Activated;

            ColorAlgoComboBox.Activated += (sender, e) => 
            {
                if (ColorAlgoComboBox.SelectedIndex == 0)
                {
                    clrSettings.Algorithm = ColorAlgorithms.EscapeTimeAlgorithm;
                    mainViewController.ReDraw();
                }
                else
                {
                    clrSettings.Algorithm = ColorAlgorithms.NormalizedIterationCountAlgorithm;
                    mainViewController.ReDraw();
                }
            };
        }
    }
}
